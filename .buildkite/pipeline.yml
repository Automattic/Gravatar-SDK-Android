# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
---

# Variables used in this pipeline are defined in `shared-pipeline-vars`, which is `source`'d before calling `buidkite-agent pipeline upload`

agents:
  queue: "android"

steps:
  - label: "Gradle Wrapper Validation"
    command: |
      validate_gradle_wrapper
    plugins: [$CI_TOOLKIT]

  # Wait for Gradle Wrapper to be validated before running any other jobs
  - wait

  - label: "Static code analysis"
    command: |
      echo "--- 🧹 Linting"
      ./gradlew ktlintcheck detekt

  - label: "☢️ Danger - PR Check"
    command: danger
    key: danger
    if: "build.pull_request.id != null"
    retry:
      manual:
        permit_on_passed: true
    agents:
      queue: "linter"

  - label: "Build"
    command: |
      echo "--- ⚒️ Building"
      # `build` task would also run tasks, which are executed in a separate job
      ./gradlew assemble

  - label: "Unit tests"
    command: |
      echo "--- 🧪 Testing"
      ./gradlew test
    artifact_paths:
      - "**/build/test-results/*/*.xml"

  - label: "Screenshot tests"
    command: |
      echo "--- 🧪📸 Screenshot Testing"
      ./gradlew \
      :gravatar-ui:verifyRoborazziDebug -Pscreenshot \
      :gravatar-quickeditor:verifyRoborazziDebug -Pscreenshot
    artifact_paths:
      - "**/build/test-results/*/*.xml"

  - label: "Binary compatibility check"
    command: |
      echo "--- Validating binary compatibility"
      ./gradlew apiCheck

  - wait: ~
    if: build.branch == "trunk" || build.tag != null

  - label: "Publish SDK to S3"
    command: .buildkite/commands/publish-to-s3.sh
    plugins: [$CI_TOOLKIT]
    notify:
      - github_commit_status:
          context: "Publish :gravatar"

  # Run it after building step so the generated files are not bundled with the release
  - label: "OpenAPI generation"
    command: |
      echo "--- ⚒️ Generating OpenAPI code"
      ./gradlew :gravatar:openApiGenerate

  - label: "Prototype Builds"
    if: "build.pull_request.id != null"
    command: .buildkite/commands/prototype-build.sh
    plugins: [ $CI_TOOLKIT ]
    artifact_paths:
      - "**/build/outputs/apk/**/*"
